function searchstrin_SES_Tbx(searchString)
%function seraches for the defined string in all files of the ses_tbx

fprintf(2,'SEARCHING THE STRING: ''%s'' \n',searchString)

%fList = matlab.codetools.requiredFilesAndProducts('ses_tbx.m');
fList = {...
    '+xml_Interface\SES2XML.m',...
    '+xml_Interface\XML2SES.m',...    
    'entity_structures\fpes.m',...
    'entity_structures\pes.m',...
    'entity_structures\ses.m',...
    'gui\+ses_gui_components\InfoCenter.m',...
    'gui\+ses_gui_components\hierarchy.m',...
    'gui\+ses_gui_components\menu.m',...
    'gui\+ses_gui_components\props.m',...
    'gui\+ses_gui_components\settings.m',...
    'gui\+ses_gui_components\supportFun.m',...
    'gui\+ses_gui_components\treeView.m',...
    'gui\BasicElements\BasicEdit.m',...
    'gui\BasicElements\BasicJTable.m',...
    'gui\BasicElements\BasicPanel.m',...
    'gui\BasicElements\BasicText.m',...
    'gui\BasicElements\HBttnBar.m',...
    'gui\BasicElements\JBttn.m',...
    'gui\BasicElements\JEdit.m',...
    'gui\BasicElements\JEditPlain.m',...
    'gui\BasicElements\JPicPane.m',...
    'gui\BasicElements\JTglBttn.m',...
    'gui\BasicElements\VBttnBar.m',...
    'gui\DefSett.m',...
    'input_parser\parser.m',...
    'input_parser\scanner.m',...
    'input_parser\symbol.m',...
    'input_parser\tokens.m',...
    'node_types\aspect.m',...
    'node_types\entity.m',...
    'node_types\maspect.m',...
    'node_types\node.m',...
    'node_types\spec.m',...
    'ses_tbx.m',...
    'ModelBuilder\mbLibDymola.m',...
    'ModelBuilder\mbLibOpenModelica.m',...
    'ModelBuilder\mbLibSimulink.m',...
    'ModelBuilder\mbLibSimulinkI.m',...
    'ModelBuilder\modelBuilder.m',...
    'ModelBuilder\pes2cmdline.m',...
    'ModelBuilder\pes2devs.m',...
    'ModelBuilder\pes2struct.m',...
    'ModelBuilder\pes2view.m',...
    'ModelBuilder\isAvailable\isDymola.m',...
    'ModelBuilder\isAvailable\isGraphviz.m',...
    'ModelBuilder\isAvailable\isMatlabDevs.m',...
    'ModelBuilder\isAvailable\isOpenModelica.m',...
    'ModelBuilder\isAvailable\isSimulink.m'};
    
for k = fList
    
    print_FileName = true;
    
    
    fStrArray = strsplit(fileread(k{:}),'\n');
    numLines  = numel(fStrArray);
    for l = 1:numLines
        curLine = fStrArray{l};
        
        pos1 = regexp(curLine,'%', 'once');
        curLine(pos1:end) = [];
        pos2 = regexp(curLine,' function ', 'once');
        if ~isempty(pos2)
            if pos1 < pos2
                continue %skip lines with starting with "%"
            end            
            function_name = strtrim(curLine);
            function_name = strtrim(function_name(9:end));
            print_FunctionName = true;
        end
        
        if ~isempty( regexp(curLine,searchString, 'once'))
            if print_FileName
                print_FileName = false;
                fprintf(2,'\n\n%s\n',k{:})
            end
            if print_FunctionName
                print_FunctionName = false;
                fprintf(1,'\n%s\n',function_name)
                fprintf(2,'Lines: ');
            end   
            fprintf(1,'%d ',l)        
        end        
    end        
end
fprintf(1,'\n')

end